---- Base app schema
---- - Timestamps 
----   - cid/ctime for the creator id and time. 
----   - mid/mtime for the last modifier id and time.

-- User
CREATE TABLE "user" (
  id bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  username varchar(128) NOT NULL UNIQUE,
  username_norm varchar(128) UNIQUE,      -- column trigger generated (see below)

  -- Auth
  pwd varchar(256),
  pwd_salt uuid NOT NULL DEFAULT gen_random_uuid(),
  token_salt uuid NOT NULL DEFAULT gen_random_uuid(),

  -- Timestamps
  cid bigint NOT NULL,
  ctime timestamp with time zone NOT NULL,
  mid bigint NOT NULL,
  mtime timestamp with time zone NOT NULL  
);

-- Normalize the user.username to remove all special characters to constrain unicity rule.
CREATE OR REPLACE FUNCTION user_username_norm_tg_fn()
RETURNS TRIGGER AS $$
BEGIN
  NEW.username_norm := LOWER(REGEXP_REPLACE(TRIM(NEW.username), '[^a-zA-Z0-9]', '', 'g'));
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER user_username_norm_tg
BEFORE INSERT OR UPDATE OF username
ON "user"
FOR EACH ROW
EXECUTE FUNCTION user_username_norm_tg_fn();


-- Task
CREATE TABLE task (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  title varchar(256) NOT NULL,

  -- Timestamps
  cid bigint NOT NULL,
  ctime timestamp with time zone NOT NULL,
  mid bigint NOT NULL,
  mtime timestamp with time zone NOT NULL  
);